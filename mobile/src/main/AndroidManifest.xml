<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright (C) 2014 The Android Open Source Project

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.example.android.uamp" >

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <uses-feature
        android:name="android.software.leanback"
        android:required="false" />
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="false" />

    <application
        android:name=".UAMPApplication"
        android:allowBackup="true"
        android:icon="@drawable/ic_launcher"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >

        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!-- Main activity for music browsing on phone -->
        <activity
            android:name=".ui.MusicPlayerActivity"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Main activity for Android TV UI -->
        <activity
            android:name=".ui.tv.TvBrowseActivity"
            android:label="@string/app_name"
            android:banner="@drawable/banner_tv"
            android:icon="@drawable/ic_launcher"
            android:theme="@style/TvTheme" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LEANBACK_LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Details activity for Android TV UI -->
        <activity
            android:name=".ui.tv.MediaDetailsActivity"
            android:label="@string/app_name"
            android:theme="@style/TvTheme" >
        </activity>

        <!-- Proxy activity that opens either the NowPlaying TV or the mobile UI, depending on
        the current environment -->
        <activity
            android:name=".ui.NowPlayingActivity"
            android:icon="@drawable/ic_launcher"
            android:theme="@style/TvTheme" >
        </activity>

        <!-- TV activity for Now Playing -->
        <activity
            android:name=".ui.tv.TvNowPlayingActivity"
            android:icon="@drawable/ic_launcher"
            android:theme="@style/TvTheme" >
        </activity>

        <!-- Proxy activity to respond to voice actions -->
        <activity
            android:name=".voiceaction.VoiceActionsActivity"
            android:exported="true"
            android:launchMode="singleTask" >

            <!-- Use this intent filter to get voice searches, like "Play The Beatles" -->
            <intent-filter>
                <action android:name="android.media.action.MEDIA_PLAY_FROM_SEARCH" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>

        <!--
             (OPTIONAL) use this meta data to indicate which icon should be
             used in Android Auto media notifications (for example, when the
             music changes and the user is looking at another app)
        -->
        <meta-data
            android:name="com.google.android.gms.car.notification.SmallIcon"
            android:resource="@drawable/ic_notification" />

        <!-- Main music service, provides media browsing and media playback services to
         consumers through MediaBrowserService and MediaSession. Consumers connect to it through
         MediaBrowser (for browsing) and MediaController (for play session control) -->
        <service
            android:name=".MusicService"
            android:exported="true">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <!-- Service that keeps track of reconnecting to Cast when wifi is enabled. -->
        <service
            android:name=
                "com.google.sample.castcompanionlibrary.cast.reconnection.ReconnectionService"/>

        <activity
            android:name=
                "com.google.sample.castcompanionlibrary.cast.player.VideoCastControllerActivity"
            android:label="@string/app_name"
            android:launchMode="singleTask"
            android:parentActivityName=".ui.MusicPlayerActivity"
            android:screenOrientation="portrait">
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value=".ui.MusicPlayerActivity" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
            </intent-filter>
        </activity>

        <activity android:name=".hardware.DemoKitActivity" >
            <intent-filter>
                <action android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED" />
            </intent-filter>

            <meta-data
                android:name="android.hardware.usb.action.USB_ACCESSORY_ATTACHED"
                android:resource="@xml/accessory_filter" />
        </activity>

        <service
            android:name=".hardware.DemoKitService"
            android:enabled="true"
            android:exported="false" >
        </service>
    </application>

</manifest>
