/*
 * Copyright 2017 Google Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.google.dagger.hilt.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {

    defaultConfig {

        compileSdk rootProject.compileSdkVersion
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        testOptions.unitTests.includeAndroidResources = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    namespace 'com.example.android.uamp.media'

}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-guava:$kotlin_coroutines_version"

    api "com.google.code.gson:gson:$gson_version"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // AndroidX Media3  dependencies

    // This allows UAMP to utilize a local version of AndroidX Media3, which is particularly
    // for testing and customization. If the ":media-lib-common" project is included, we assume
    // the others are included as well.
    if (findProject(':lib-common') != null) {
        api project(':lib-common')
        api project(':lib-exoplayer')
        api project(':lib-datasource')
        api project(':lib-ui')
        api project(':lib-session')
        api project(':lib-cast')
    } else {
        api "androidx.media3:media3-exoplayer:$androidx_media3_version"
        api "androidx.media3:media3-datasource:$androidx_media3_version"
        api "androidx.media3:media3-ui:$androidx_media3_version"
        api "androidx.media3:media3-session:$androidx_media3_version"
    }

    // Glide dependencies
    api "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
}
